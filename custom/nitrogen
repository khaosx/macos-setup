#!/bin/bash

# Install Don Melton's Video Transcoding Gem
# https://github.com/donmelton/video_transcoding
sudo gem install video_transcoding

# Install pip for python goodness
sudo easy_install pip

#slack cleaner
sudo pip install slack-cleaner

# Install my fork of Archey
sudo mv $HOME/Desktop/archey /usr/local/bin/archey

# Download components
dirAppHome=$HOME/Desktop
wget --quiet -O "$dirAppHome/FileBot_4.8.2.pkg" https://get.filebot.net/filebot/FileBot_4.8.2/FileBot_4.8.2.pkg
wget --quiet -O "$dirAppHome/mkvtools3.7.1.zip" http://www.emmgunn.com/downloads/mkvtools3.7.1.zip
wget --quiet -O "$dirAppHome/mp4tools3.7.1.zip" http://www.emmgunn.com/downloads/mp4tools3.7.1.zip
wget --quiet -O "$dirAppHome/subtools1.0.1.zip" http://www.emmgunn.com/downloads/subtools1.0.1.zip

# Install my fork of Archey
sudo mv $HOME/Desktop/archey /usr/local/bin/archey

# Install and cleanup 
for f in $dirAppHome/*.zip
do
	strFilename=$(basename "$f")
	strZIPName="${strFilename%.*}"
	unzip -qq -d $dirAppHome -n "$f"
	rm "$f"
	rm -rf $dirAppHome/__MACOSX
	if [ -d "$dirAppHome/$strZIPName" ]; then
		mv "$dirAppHome/$strZIPName/"*.app $dirAppHome/
		rm -r "$dirAppHome/$strZIPName"
	fi
done

for f in $dirAppHome/*.dmg
do
	strFilename=$(basename "$f")
	strDMGName="${strFilename%.*}"
	hdiutil attach -nobrowse "$f"
	if [ -d "/Volumes/$strDMGName.app" ]; then
		cp -r "/Volumes/$strDMGName/$strDMGName.app" /Applications
	fi
	hdiutil detach "/Volumes/$strDMGName"
	rm "$f"
done

for f in $dirAppHome/*.app
do
	mv "$f" /Applications
done

for f in $dirAppHome/*.pkg
do
	sudo installer -pkg "$f" -target /
	rm "$f"
done

# Restore from storage drive
if [ -d "/Volumes/Storage/$HOSTNAME/backups" ]; then
	BackupPortable="/Volumes/Storage/$HOSTNAME/backups"
	cp "$BackupPortable"/ssh/* $HOME/.ssh/
	cp -R  "$BackupPortable"/scripts/* /Users/kris/scripts
	rsync -r -v -t "$BackupPortable/MakeMKV/" $HOME/Library/MakeMKV
	rsync -r -v -t "$BackupPortable/Hazel" "$HOME/Library/Application Support/"
	cp "$BackupPortable/com.makemkv.MakeMKV.plist" "$HOME/Library/Preferences/com.makemkv.MakeMKV.plist"
	cp "$BackupPortable/com.noodlesoft.Hazel.plist" "$HOME/Library/Preferences/com.noodlesoft.Hazel.plist"
	cp "$BackupPortable/com.noodlesoft.HazelHelper.plist" "$HOME/Library/Preferences/com.noodlesoft.HazelHelper.plist"
	rm -rf "$BackupPortable"
fi

# Add convert_media plist to launchd
mv "$BOOTSTRAP_DIR/custom/plists/com.khaosx.convert_media.plist" "$HOME/Library/LaunchAgents/com.khaosx.convert_media.plist"
launchctl load "$HOME/Library/LaunchAgents/com.khaosx.convert_media.plist"

# Turn on screen sharing and remote management
sudo defaults write /var/db/launchd.db/com.apple.launchd/overrides.plist com.apple.screensharing -dict Disabled -bool false
sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.screensharing.plist
sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -activate -configure -allowAccessFor -specifiedUsers -privs -all -clientopts -setmenuextra -menuextra yes
sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -configure -users kris -access -on -privs -all


###############################################################################
# Power Options                                                               #
###############################################################################

source "$BOOTSTRAP_DIR/custom/power/power_settings_server.sh"